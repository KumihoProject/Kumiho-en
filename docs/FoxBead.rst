
========
.. index:: ! FoxBead

.. _FoxBead:
FoxBead
========

``FoxBead`` is the name of the Oracle service provided by Kumiho.

------------------------------------------------------------------------------


Commit-Reveal
---------------------
A Commit-Reveal machanism provided by FoxBead devised such that no charges will be incurred.

You can check out an example here: https://github.com/KumihoProject/KumihoDice

Commit will be retained for 5 minutes, and will be retained for additional 5 minutes after Reveal.

1. Commit
^^^^^^^^^^^^^^^^^^^
.. code-block:: javascript

    fetch('https://bead.kumiho.org/commit-reveal/<Contract Address(Revealer)>?meta=<Meta Data>').then(console.log);

    //{
    //    "messageHash":"0xb1d0c27bad208b7a7e8df99357539680fe082f1884166a4bbdc1cd6564fdb93d",
    //    "v":"0x1b",
    //    "r":"0xb315c1941998fcea4ea6b9a4987f2282f9311857f90503c8d9e1993c7f6522e5",
    //    "s":"0x3461281ab9afb41e10ad691c2fd5c1010c2456d35c62317b8bd17b08fd2cf2c5",
    //    "signature":"0xb315c1941998fcea4ea6b9a4987f2282f9311857f90503c8d9e1993c7f6522e53461281ab9afb41e10ad691c2fd5c1010c2456d35c62317b8bd17b08fd2cf2c51b",
    //    "revealer":"0x721F785036BAf02671a6700d1769c43a9225568d",
    //    "address":"0x242BCe82d002DB2De7cE19D5b005E7d534C05321",
    //    "timestamp":1588773265450,
    //    "hashWithMeta":{
    //        "message":"0xb94597af00c399fb1be5b229625c7d6b282b085d66bc82822b0ed557b25734c3",
    //        "messageHash":"0x0ae5719d2dac8627fa5227d70b4a84ce5186289c09e20c114fce3ccf46bce930",
    //        "v":"0x1b",
    //        "r":"0x489f521e3671565b7df658fa815a20081dd2b373df91fb536d49331928eedbdf",
    //        "s":"0x6b2d41e31f4adea7d58393b7a17d8ed1c8eb682e77895caca06d1db717bf3868",
    //        "signature":"0x489f521e3671565b7df658fa815a20081dd2b373df91fb536d49331928eedbdf6b2d41e31f4adea7d58393b7a17d8ed1c8eb682e77895caca06d1db717bf38681b"
    //    }
    //}

----------
Results
----------

1. ``messageHash, v, r, s`` - ``bytes32, uint8, bytes32, bytes32``: The hash signed with the random key generated by FoxBead, and the information regarding the signature.
2. ``revealer`` - ``address``: The address of the Contract the commit will be revealed to. The KumihoCommitReveal event emitted from only this address can reveal the random key associated with the commit.
3. ``address`` - ``address``: The address of the signer, which signed the commit.
4. ``timestamp`` - ``Number``: The timestamp the commit was created at.
5. ``hashWithMeta`` - ``Object``: The signature data, i.e. signed hash of the metadata and messageHash.

----------
Meta Data
----------
.. code-block:: javascript

    const hashMetaMessage = {
        ...caver.klay.accounts.sign(caver.utils.soliditySha3(signedMessage.messageHash, meta ? caver.utils.padLeft(caver.utils.toHex(meta), 64) : ''), account.privateKey)
    };

hashWithMeta is generated by the above process. If the data need to be validated from the contract, send it using the above method. For example, KumihoDice validates 'commitLastBlock' by receiving the metadata the way described above.

.. code-block:: solidity

    // Check that commit is valid - it has not expired and its signature is valid.
    require(block.number <= commitLastBlock, "Commit has expired.");
    // Check if received from the secretSigner(Kumiho)
    require(
        secretSigner ==
            ecrecover(
                keccak256(
                    abi.encodePacked(
                        "\x19Klaytn Signed Message:\n32",
                        keccak256(abi.encodePacked(commit, commitLastBlock))
                    )
                ),
                metaV,
                metaR,
                metaS
            ),
        "ECDSA signature is not valid."
    );

2. Reveal
^^^^^^^^^^^^^^^^^^^^^^^^

FoxBead reveals the commit when a KumihoCommitReveal event occurs from the Contract with the address specified in the Commit phase.

.. code-block:: solidity

    event KumihoCommitReveal(bytes32 message)

-------------
Parameters
-------------

1. ``message`` - ``bytes32``: Revealí•  Commit

FoxBead reveals the commit after it detects a KumihoCommitReveal event, making the commit available to be queried.

.. code-block:: javascript

    fetch('https://bead.kumiho.org/commit-reveal/<Commit>').then(console.log);

    //{
    //    "revealed":true,
    //    "revealer":"0x721F785036BAf02671a6700d1769c43a9225568d",
    //    "message":"0x75cc0161727546b539a250e833a7d2095c544b89b479e4797cfb046a09f00f30",
    //    "messageHash":"0x55fea6b2a278c570869fe2eac9565467edd8f75f4643f512a2f48d0fed3aecae",
    //    "v":"0x1c",
    //    "r":"0xc60d5770f5909b4e463648cb3b51aab7970aa1dfe6a7ffb3cdc532ea137a7557",
    //    "s":"0x61a9e7a38761674b9e0f361ec7cc05f74be80278b41e076ca3fc87477f250103",
    //    "signature":"0xc60d5770f5909b4e463648cb3b51aab7970aa1dfe6a7ffb3cdc532ea137a755761a9e7a38761674b9e0f361ec7cc05f74be80278b41e076ca3fc87477f2501031c",
    //    "address":"0x242BCe82d002DB2De7cE19D5b005E7d534C05321",
    //    "timestamp":1588776238941,
    //    "hashWithMeta":{
    //        "message":"0x4650c53ede91b5e625ea3beafcc601d7f3fa1872ddf276c67233e4485190990d",
    //        "messageHash":"0xb456c36a5d7237a67bd7ffd4f1d7bde232edb99a14ee7779c4bc854af8b523ef",
    //        "v":"0x1b",
    //        "r":"0x6423de8badc8b255e08ea263a1e59377282a1614364636e42a02c291821083a5",
    //        "s":"0x3b2b1b3a62e5da2ffe65d54fa67fa3a756bde1dc50766b328057bd85408cfdac",
    //        "signature":"0x6423de8badc8b255e08ea263a1e59377282a1614364636e42a02c291821083a53b2b1b3a62e5da2ffe65d54fa67fa3a756bde1dc50766b328057bd85408cfdac1b"
    //    },
    //    "revealedTimestamp":1588776263957
    //}

----------
Results
----------

1. ``revealed`` - ``boolean``: Whether the commit is revealed or not.
2. ``message`` - ``bytes32``: The random key generated in the Commit phase.
3. ``messageHash, v, r, s`` - ``bytes32, uint8, bytes32, bytes32``: The hash signed with the random key generated by FoxBead, and the information regarding the signature.
4. ``revealer`` - ``address``: The address of the Contract the commit will be revealed to. The KumihoCommitReveal event emitted from only this address can reveal the random key associated with the commit.
5. ``address`` - ``address``: The address of the signer, which signed the commit.
6. ``timestamp`` - ``Number``: The timestamp the commit was created at.
7. ``hashWithMeta`` - ``Object``: The signature data, i.e. signed hash of the metadata and messageHash.
8. ``revealedTimestamp`` - ``Number``: The timestamp FoxBead revealed the commit at.

------------------------------------------------------------------------------

